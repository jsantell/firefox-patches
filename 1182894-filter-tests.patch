From: Jordan Santell <jsantell@mozilla.com>
Date: Tue, 14 Jul 2015 19:20:23 -0700
Subject: Bug 1182894 - Add tests for collapsing markers while filtering in the performance tool. r=vp"

diff --git a/browser/devtools/performance/test/unit/test_waterfall-utils-collapse-04.js b/browser/devtools/performance/test/unit/test_waterfall-utils-collapse-04.js
new file mode 100644
index 0000000..025b795
--- /dev/null
+++ b/browser/devtools/performance/test/unit/test_waterfall-utils-collapse-04.js
@@ -0,0 +1,102 @@
+/* Any copyright is dedicated to the Public Domain.
+   http://creativecommons.org/publicdomain/zero/1.0/ */
+
+/**
+ * Tests if the waterfall collapsing logic works properly
+ * when filtering parents and children.
+ */
+
+function run_test() {
+  run_next_test();
+}
+
+add_task(function test() {
+  const WaterfallUtils = devtools.require("devtools/performance/waterfall-utils");
+
+  [
+    [["DOMEvent"], gExpectedOutputNoDOMEvent],
+    [["Javascript"], gExpectedOutputNoJS],
+    [["DOMEvent", "Javascript"], gExpectedOutputNoDOMEventOrJS],
+  ].forEach(([filter, expected]) => {
+    let rootMarkerNode = WaterfallUtils.createParentNode({ name: "(root)" });
+
+    WaterfallUtils.collapseMarkersIntoNode({
+      rootNode: rootMarkerNode,
+      markersList: gTestMarkers,
+      filter
+    });
+
+    compare(rootMarkerNode, expected);
+  });
+
+  function compare (marker, expected) {
+    for (let prop in expected) {
+      if (prop === "submarkers") {
+        for (let i = 0; i < expected.submarkers.length; i++) {
+          compare(marker.submarkers[i], expected.submarkers[i]);
+        }
+      } else if (prop !== "uid") {
+        equal(marker[prop], expected[prop], `${expected.name} matches ${prop}`);
+      }
+    }
+  }
+});
+
+const gTestMarkers = [
+  { start: 1, end: 18, name: "DOMEvent" },
+    // Test that JS markers can fold in DOM events and have marker children
+    { start: 2, end: 16, name: "Javascript" },
+      // Test all these markers can be children
+      { start: 3, end: 4, name: "Paint" },
+      { start: 5, end: 6, name: "Reflow" },
+      { start: 7, end: 8, name: "Styles" },
+      { start: 9, end: 9, name: "TimeStamp" },
+      { start: 10, end: 11, name: "Parse HTML" },
+      { start: 12, end: 13, name: "Parse XML" },
+      { start: 14, end: 15, name: "GarbageCollection" },
+  // Test that JS markers can be parents without being a child of DOM events
+  { start: 25, end: 30, name: "Javascript" },
+    { start: 26, end: 27, name: "Paint" },
+];
+
+const gExpectedOutputNoJS = {
+  name: "(root)", submarkers: [
+    { start: 1, end: 18, name: "DOMEvent", submarkers: [
+      { start: 3, end: 4, name: "Paint" },
+      { start: 5, end: 6, name: "Reflow" },
+      { start: 7, end: 8, name: "Styles" },
+      { start: 9, end: 9, name: "TimeStamp" },
+      { start: 10, end: 11, name: "Parse HTML" },
+      { start: 12, end: 13, name: "Parse XML" },
+      { start: 14, end: 15, name: "GarbageCollection" },
+    ]},
+    { start: 26, end: 27, name: "Paint" },
+]};
+
+const gExpectedOutputNoDOMEvent = {
+  name: "(root)", submarkers: [
+    { start: 2, end: 16, name: "Javascript", submarkers: [
+      { start: 3, end: 4, name: "Paint" },
+      { start: 5, end: 6, name: "Reflow" },
+      { start: 7, end: 8, name: "Styles" },
+      { start: 9, end: 9, name: "TimeStamp" },
+      { start: 10, end: 11, name: "Parse HTML" },
+      { start: 12, end: 13, name: "Parse XML" },
+      { start: 14, end: 15, name: "GarbageCollection" },
+    ]},
+    { start: 25, end: 30, name: "Javascript", submarkers: [
+      { start: 26, end: 27, name: "Paint" },
+    ]}
+]};
+
+const gExpectedOutputNoDOMEventOrJS = {
+  name: "(root)", submarkers: [
+    { start: 3, end: 4, name: "Paint" },
+    { start: 5, end: 6, name: "Reflow" },
+    { start: 7, end: 8, name: "Styles" },
+    { start: 9, end: 9, name: "TimeStamp" },
+    { start: 10, end: 11, name: "Parse HTML" },
+    { start: 12, end: 13, name: "Parse XML" },
+    { start: 14, end: 15, name: "GarbageCollection" },
+    { start: 26, end: 27, name: "Paint" },
+]};
diff --git a/browser/devtools/performance/test/unit/xpcshell.ini b/browser/devtools/performance/test/unit/xpcshell.ini
index 135568f..e4ee292 100644
--- a/browser/devtools/performance/test/unit/xpcshell.ini
+++ b/browser/devtools/performance/test/unit/xpcshell.ini
@@ -22,8 +22,9 @@ skip-if = toolkit == 'android' || toolkit == 'gonk'
 [test_tree-model-07.js]
 [test_tree-model-08.js]
 [test_tree-model-09.js]
 [test_tree-model-10.js]
 [test_tree-model-11.js]
 [test_waterfall-utils-collapse-01.js]
 [test_waterfall-utils-collapse-02.js]
 [test_waterfall-utils-collapse-03.js]
+[test_waterfall-utils-collapse-04.js]
-- 
2.2.1

