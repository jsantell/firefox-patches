From: Jordan Santell <jsantell@gmail.com>
Date: Wed, 8 Apr 2015 19:06:34 -0700
Subject: Bug 1151246 - flame graph header should render above the flame graph. r=vp


diff --git a/browser/devtools/shared/widgets/FlameGraph.js b/browser/devtools/shared/widgets/FlameGraph.js
index 6655c21..a2b8c00 100644
--- a/browser/devtools/shared/widgets/FlameGraph.js
+++ b/browser/devtools/shared/widgets/FlameGraph.js
@@ -386,35 +386,54 @@ FlameGraph.prototype = {
     let canvasHeight = this._height;
     ctx.clearRect(0, 0, canvasWidth, canvasHeight);
 
     let selection = this._selection;
     let selectionWidth = selection.end - selection.start;
     let selectionScale = canvasWidth / selectionWidth;
     this._drawTicks(selection.start, selectionScale);
     this._drawPyramid(this._data, this._verticalOffset, selection.start, selectionScale);
+    this._drawHeader(selection.start, selectionScale);
 
     this._shouldRedraw = false;
   },
 
   /**
-   * Draws the overhead ticks in this graph.
+   * Draws the overhead header, with time markers and ticks in this graph.
    *
    * @param number dataOffset, dataScale
    *        Offsets and scales the data source by the specified amount.
    *        This is used for scrolling the visualization.
    */
-  _drawTicks: function(dataOffset, dataScale) {
+  _drawHeader: function(dataOffset, dataScale) {
     let ctx = this._ctx;
     let canvasWidth = this._width;
-    let canvasHeight = this._height;
-    let scaledOffset = dataOffset * dataScale;
+    let headerHeight = OVERVIEW_HEADER_HEIGHT * this._pixelRatio;
 
     ctx.fillStyle = this.overviewHeaderBackgroundColor;
-    ctx.fillRect(0, 0, canvasWidth, OVERVIEW_HEADER_HEIGHT * this._pixelRatio);
+    ctx.fillRect(0, 0, canvasWidth, headerHeight);
+
+    this._drawTicks(dataOffset, dataScale, { from: 0, to: headerHeight, renderText: true });
+  },
+
+  /**
+   * Draws the overhead ticks in this graph in the flame graph area.
+   *
+   * @param number dataOffset, dataScale, from, to, renderText
+   *        Offsets and scales the data source by the specified amount.
+   *        from and to determine the Y position of how far the stroke
+   *        should be drawn.
+   *        This is used for scrolling the visualization.
+   */
+  _drawTicks: function(dataOffset, dataScale, options) {
+    let { from, to, renderText }  = options || {};
+    let ctx = this._ctx;
+    let canvasWidth = this._width;
+    let canvasHeight = this._height;
+    let scaledOffset = dataOffset * dataScale;
 
     let fontSize = OVERVIEW_HEADER_TEXT_FONT_SIZE * this._pixelRatio;
     let fontFamily = OVERVIEW_HEADER_TEXT_FONT_FAMILY;
     let textPaddingLeft = OVERVIEW_HEADER_TEXT_PADDING_LEFT * this._pixelRatio;
     let textPaddingTop = OVERVIEW_HEADER_TEXT_PADDING_TOP * this._pixelRatio;
     let tickInterval = this._findOptimalTickInterval(dataScale);
 
     ctx.textBaseline = "top";
@@ -423,19 +442,21 @@ FlameGraph.prototype = {
     ctx.strokeStyle = OVERVIEW_HEADER_TIMELINE_STROKE_COLOR;
     ctx.beginPath();
 
     for (let x = -scaledOffset % tickInterval; x < canvasWidth; x += tickInterval) {
       let lineLeft = x;
       let textLeft = lineLeft + textPaddingLeft;
       let time = Math.round((x / dataScale + dataOffset) / this._pixelRatio);
       let label = time + " " + this.timelineTickUnits;
-      ctx.fillText(label, textLeft, textPaddingTop);
-      ctx.moveTo(lineLeft, 0);
-      ctx.lineTo(lineLeft, canvasHeight);
+      if (renderText) {
+        ctx.fillText(label, textLeft, textPaddingTop);
+      }
+      ctx.moveTo(lineLeft, from || 0);
+      ctx.lineTo(lineLeft, to || canvasHeight);
     }
 
     ctx.stroke();
   },
 
   /**
    * Draws the blocks and text in this graph.
    *
-- 
2.2.1

