From: Jordan Santell <jsantell@mozilla.com>
Date: Tue, 9 Jun 2015 22:31:19 -0700
Subject: Bug 1172182 part 2: correctly link to the memory module via timeline actor. r=vp

diff --git a/toolkit/devtools/server/actors/timeline.js b/toolkit/devtools/server/actors/timeline.js
index 514588c..2d2ef01 100644
--- a/toolkit/devtools/server/actors/timeline.js
+++ b/toolkit/devtools/server/actors/timeline.js
@@ -21,17 +21,17 @@
 
 const {Ci, Cu} = require("chrome");
 const protocol = require("devtools/server/protocol");
 const {method, Arg, RetVal, Option} = protocol;
 const events = require("sdk/event/core");
 const {setTimeout, clearTimeout} = require("sdk/timers");
 const {Task} = Cu.import("resource://gre/modules/Task.jsm", {});
 
-const {MemoryBridge} = require("devtools/server/actors/utils/memory-bridge");
+const {Memory} = require("devtools/toolkit/shared/memory");
 const {FramerateActor} = require("devtools/server/actors/framerate");
 const {StackFrameCache} = require("devtools/server/actors/utils/stack");
 
 // How often do we pull markers from the docShells, and therefore, how often do
 // we send events to the front (knowing that when there are no markers in the
 // docShell, no event is sent).
 const DEFAULT_TIMELINE_DATA_PULL_TIMEOUT = 200; // ms
 
@@ -260,17 +260,17 @@ let TimelineActor = exports.TimelineActor = protocol.ActorClass({
     this._stackFrames.initFrames();
     this._withMemory = withMemory;
     this._withTicks = withTicks;
 
     for (let docShell of this.docShells) {
       docShell.recordProfileTimelineMarkers = true;
     }
 
-    this._memoryBridge = new MemoryBridge(this.tabActor, this._stackFrames);
+    this._memoryBridge = new Memory(this.tabActor, this._stackFrames);
     this._memoryBridge.attach();
     events.on(this._memoryBridge, "garbage-collection", this._onGarbageCollection);
 
     if (withTicks) {
       this._framerateActor = new FramerateActor(this.conn, this.tabActor);
       this._framerateActor.startRecording();
     }
 
-- 
2.2.1

