From: Jordan Santell <jsantell@mozilla.com>
Date: Fri, 5 Feb 2016 13:26:09 -0800
Subject: Bug 1246273 - Add localized strings for types and attempts in the JIT opts view. r=vp

diff --git a/devtools/client/locales/en-US/jit-optimizations.properties b/devtools/client/locales/en-US/jit-optimizations.properties
index 1a9fb58..092d30b 100644
--- a/devtools/client/locales/en-US/jit-optimizations.properties
+++ b/devtools/client/locales/en-US/jit-optimizations.properties
@@ -21,11 +21,15 @@ jit.optimizationFailure=Optimization failed
 # LOCALIZATION NOTE (jit.samples):
 # See: http://developer.mozilla.org/en/docs/Localization_and_Plurals
 # This string is displayed for the unit representing the number of times a
 # frame is sampled.
 # "#1" represents the number of samples
 # example: 30 samples
 jit.samples=#1 sample;#1 samples
 
-# LOCALIZATION NOTE (jit.empty):
-# This string is displayed when there are no JIT optimizations to display.
-jit.empty=No JIT optimizations recorded for this frame.
+# LOCALIZATION NOTE (jit.types):
+# This string is displayed for the group of Ion Types in the optimizations view.
+jit.types=Types
+
+# LOCALIZATION NOTE (jit.attempts):
+# This string is displayed for the group of optimization attempts in the optimizations view.
+jit.attempts=Attempts
diff --git a/devtools/client/performance/components/jit-optimizations-item.js b/devtools/client/performance/components/jit-optimizations-item.js
index 8ee3c3b..b16254e 100644
--- a/devtools/client/performance/components/jit-optimizations-item.js
+++ b/devtools/client/performance/components/jit-optimizations-item.js
@@ -9,17 +9,18 @@ const L10N = new ViewHelpers.L10N(STRINGS_URI);
 const { PluralForm } = require("resource://gre/modules/PluralForm.jsm");
 const { DOM: dom, PropTypes, createClass, createFactory } = require("devtools/client/shared/vendor/react");
 const {
   JITOptimizations, hasSuccessfulOutcome, isSuccessfulOutcome
 } = require("devtools/client/performance/modules/logic/jit");
 const Frame = createFactory(require("devtools/client/shared/components/frame"));
 const OPTIMIZATION_FAILURE = L10N.getStr("jit.optimizationFailure");
 const JIT_SAMPLES = L10N.getStr("jit.samples");
-const JIT_EMPTY_TEXT = L10N.getStr("jit.empty");
+const JIT_TYPES = L10N.getStr("jit.types");
+const JIT_ATTEMPTS = L10N.getStr("jit.attempts");
 const PROPNAME_MAX_LENGTH = 4;
 // If TREE_ROW_HEIGHT changes, be sure to change `var(--jit-tree-row-height)`
 // in `devtools/client/themes/jit-optimizations.css`
 const TREE_ROW_HEIGHT = 14;
 
 const OPTIMIZATION_ITEM_TYPES = ["site", "attempts", "types", "attempt", "type", "observedtype"];
 const JITOptimizationsItem = module.exports = createClass({
   displayName: "JITOptimizationsItem",
@@ -95,23 +96,23 @@ const JITOptimizationsItem = module.exports = createClass({
       children.unshift(dom.span({ className: "opt-icon warning" }));
     }
 
     return dom.span({ className: "optimization-site" }, ...children);
   },
 
   _renderAttempts({ item: attempts }) {
     return dom.span({ className: "optimization-attempts" },
-      `Attempts (${attempts.length})`
+      `${JIT_ATTEMPTS} (${attempts.length})`
     );
   },
 
   _renderTypes({ item: types }) {
     return dom.span({ className: "optimization-types" },
-      `Types (${types.length})`
+      `${JIT_TYPES} (${types.length})`
     );
   },
 
   _renderAttempt({ item: attempt }) {
     let success = isSuccessfulOutcome(attempt.outcome);
     let { strategy, outcome } = attempt;
     return dom.span({ className: "optimization-attempt" },
       dom.span({ className: "optimization-strategy" }, strategy),
-- 
2.3.1

