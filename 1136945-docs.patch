From: Jordan Santell <jsantell@gmail.com>
Date: Tue, 28 Apr 2015 10:34:23 -0700
Subject: Bug 1136945 - Add to Debugger.Memory docs possible outcomes of the nonincrementalReason in the onGarbageCollection event. r=fitzgen

diff --git a/js/src/doc/Debugger/Debugger.Memory.md b/js/src/doc/Debugger/Debugger.Memory.md
index 106e8e0..2c5123d 100644
--- a/js/src/doc/Debugger/Debugger.Memory.md
+++ b/js/src/doc/Debugger/Debugger.Memory.md
@@ -132,17 +132,17 @@ compartment.
           "endTimestamp": <i>timestamp</i>,
         }
         </code></pre>
 
         Here the *timestamp* values are [timestamps][] of the GC slice's start
         and end events.
 
     `reason`
-    :   A very short string describing th reason why the collection was
+    :   A very short string describing the reason why the collection was
         triggered. Known values include the following:
 
         * "API"
         * "EAGER_ALLOC_TRIGGER"
         * "DESTROY_RUNTIME"
         * "DESTROY_CONTEXT"
         * "LAST_DITCH"
         * "TOO_MUCH_MALLOC"
@@ -176,17 +176,23 @@ compartment.
         * "SHUTDOWN_CC"
         * "FINISH_LARGE_EVALUATE"
         * "USER_INACTIVE"
 
     `nonincrementalReason`
     :   If SpiderMonkey's collector determined it could not incrementally
         collect garbage, and had to do a full GC all at once, this is a short
         string describing the reason it determined the full GC was necessary.
-        Otherwise, `null` is returned.
+        Otherwise, `null` is returned. Known values include the following:
+
+        * "GC mode"
+        * "malloc bytes trigger"
+        * "allocation trigger"
+        * "requested"
+
 
 Function Properties of the `Debugger.Memory.prototype` Object
 -------------------------------------------------------------
 
 <code id='drain-alloc-log'>drainAllocationsLog()</code>
 :   When `trackingAllocationSites` is `true`, this method returns an array of
     recent `Object` allocations within the set of debuggees. *Recent* is
     defined as the `maxAllocationsLogLength` most recent `Object` allocations
-- 
2.2.1

