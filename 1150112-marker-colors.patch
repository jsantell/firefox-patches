From: Jordan Santell <jsantell@gmail.com>
Date: Thu, 2 Apr 2015 10:30:12 -0700
Subject: Bug 1150112 markers overview should react to theme change,
 and other marker views now use CSS to automatically use theme change. r=vp

diff --git a/browser/devtools/performance/test/browser_timeline_blueprint.js b/browser/devtools/performance/test/browser_timeline_blueprint.js
index 81ea630..6381054 100644
--- a/browser/devtools/performance/test/browser_timeline_blueprint.js
+++ b/browser/devtools/performance/test/browser_timeline_blueprint.js
@@ -12,16 +12,14 @@ function spawnTest () {
     "A timeline blueprint should be available.");
 
   ok(Object.keys(TIMELINE_BLUEPRINT).length,
     "The timeline blueprint has at least one entry.");
 
   for (let [key, value] of Iterator(TIMELINE_BLUEPRINT)) {
     ok("group" in value,
       "Each entry in the timeline blueprint contains a `group` key.");
-    ok("fill" in value,
-      "Each entry in the timeline blueprint contains a `fill` key.");
-    ok("stroke" in value,
-      "Each entry in the timeline blueprint contains a `stroke` key.");
+    ok("colorName" in value,
+      "Each entry in the timeline blueprint contains a `colorName` key.");
     ok("label" in value,
       "Each entry in the timeline blueprint contains a `label` key.");
   }
 }
diff --git a/browser/devtools/performance/views/toolbar.js b/browser/devtools/performance/views/toolbar.js
index 63e6e92..4df1322 100644
--- a/browser/devtools/performance/views/toolbar.js
+++ b/browser/devtools/performance/views/toolbar.js
@@ -48,24 +48,20 @@ let ToolbarView = {
     for (let [markerName, markerDetails] of Iterator(TIMELINE_BLUEPRINT)) {
       let menuitem = document.createElement("menuitem");
       menuitem.setAttribute("closemenu", "none");
       menuitem.setAttribute("type", "checkbox");
       menuitem.setAttribute("align", "center");
       menuitem.setAttribute("flex", "1");
       menuitem.setAttribute("label", markerDetails.label);
       menuitem.setAttribute("marker-type", markerName);
+      menuitem.className = markerDetails.colorName;
 
       menuitem.addEventListener("command", this._onHiddenMarkersChanged);
 
-      // Style used by pseudo element ::before in performance.inc.css
-      let bulletStyle = `--bullet-bg: ${markerDetails.fill};`
-      bulletStyle += `--bullet-border: ${markerDetails.stroke}`;
-      menuitem.setAttribute("style", bulletStyle);
-
       $("#performance-filter-menupopup").appendChild(menuitem);
     }
   },
 
   /**
    * Updates the menu items checked state in the timeline markers filter popup.
    */
   _updateHiddenMarkersPopup: function() {
diff --git a/browser/devtools/shared/timeline/global.js b/browser/devtools/shared/timeline/global.js
index 913a37a..24f94a3 100644
--- a/browser/devtools/shared/timeline/global.js
+++ b/browser/devtools/shared/timeline/global.js
@@ -13,57 +13,53 @@ Cu.import("resource:///modules/devtools/ViewHelpers.jsm");
 const STRINGS_URI = "chrome://browser/locale/devtools/timeline.properties";
 const L10N = new ViewHelpers.L10N(STRINGS_URI);
 
 /**
  * A simple schema for mapping markers to the timeline UI. The keys correspond
  * to marker names, while the values are objects with the following format:
  *   - group: the row index in the timeline overview graph; multiple markers
  *            can be added on the same row. @see <overview.js/buildGraphImage>
- *   - fill: a fill color used when drawing the marker
- *   - stroke: a stroke color used when drawing the marker
  *   - label: the label used in the waterfall to identify the marker
+ *   - colorName: the name of the DevTools color used for this marker. If adding
+ *                a new color, be sure to check that there's an entry for
+ *                `.marker-details-bullet.{COLORNAME}` for the equivilent entry.
+ *                https://developer.mozilla.org/en-US/docs/Tools/DevToolsColors
  *
  * Whenever this is changed, browser_timeline_waterfall-styles.js *must* be
  * updated as well.
  */
 const TIMELINE_BLUEPRINT = {
   "Styles": {
     group: 0,
-    fill: "hsl(285,50%,68%)",
-    stroke: "hsl(285,50%,48%)",
+    colorName: "highlight-pink",
     label: L10N.getStr("timeline.label.styles2")
   },
   "Reflow": {
     group: 0,
-    fill: "hsl(285,50%,68%)",
-    stroke: "hsl(285,50%,48%)",
+    colorName: "highlight-pink",
     label: L10N.getStr("timeline.label.reflow2")
   },
   "Paint": {
     group: 0,
-    fill: "hsl(104,57%,71%)",
-    stroke: "hsl(104,57%,51%)",
+    colorName: "highlight-green",
     label: L10N.getStr("timeline.label.paint")
   },
   "DOMEvent": {
     group: 1,
-    fill: "hsl(39,82%,69%)",
-    stroke: "hsl(39,82%,49%)",
+    colorName: "highlight-lightorange",
     label: L10N.getStr("timeline.label.domevent")
   },
   "Javascript": {
     group: 1,
-    fill: "hsl(39,82%,69%)",
-    stroke: "hsl(39,82%,49%)",
+    colorName: "highlight-lightorange",
     label: L10N.getStr("timeline.label.javascript2")
   },
   "ConsoleTime": {
     group: 2,
-    fill: "hsl(0,0%,80%)",
-    stroke: "hsl(0,0%,60%)",
+    colorName: "highlight-bluegrey",
     label: L10N.getStr("timeline.label.consoleTime")
   },
 };
 
 // Exported symbols.
 exports.L10N = L10N;
 exports.TIMELINE_BLUEPRINT = TIMELINE_BLUEPRINT;
diff --git a/browser/devtools/shared/timeline/marker-details.js b/browser/devtools/shared/timeline/marker-details.js
index 5e3b64d..7e9dff5 100644
--- a/browser/devtools/shared/timeline/marker-details.js
+++ b/browser/devtools/shared/timeline/marker-details.js
@@ -59,19 +59,17 @@ MarkerDetails.prototype = {
    */
   buildMarkerTypeLabel: function(type) {
     let blueprint = TIMELINE_BLUEPRINT[type];
 
     let hbox = this._document.createElement("hbox");
     hbox.setAttribute("align", "center");
 
     let bullet = this._document.createElement("hbox");
-    bullet.className = "marker-details-bullet";
-    bullet.style.backgroundColor = blueprint.fill;
-    bullet.style.borderColor = blueprint.stroke;
+    bullet.className = `marker-details-bullet ${blueprint.colorName}`;
 
     let label = this._document.createElement("label");
     label.className = "marker-details-type";
     label.setAttribute("value", blueprint.label);
 
     hbox.appendChild(bullet);
     hbox.appendChild(label);
 
diff --git a/browser/devtools/shared/timeline/markers-overview.js b/browser/devtools/shared/timeline/markers-overview.js
index a333f54..0df40ba 100644
--- a/browser/devtools/shared/timeline/markers-overview.js
+++ b/browser/devtools/shared/timeline/markers-overview.js
@@ -164,22 +164,18 @@ MarkersOverview.prototype = Heritage.extend(AbstractCanvasGraph.prototype, {
     ctx.stroke();
 
     // Draw the timeline markers.
 
     for (let [, { style, batch }] of this._paintBatches) {
       let top = headerHeight + style.group * groupHeight + groupPadding / 2;
       let height = groupHeight - groupPadding;
 
-      let gradient = ctx.createLinearGradient(0, top, 0, top + height);
-      gradient.addColorStop(OVERVIEW_MARKERS_COLOR_STOPS[0], style.stroke);
-      gradient.addColorStop(OVERVIEW_MARKERS_COLOR_STOPS[1], style.fill);
-      gradient.addColorStop(OVERVIEW_MARKERS_COLOR_STOPS[2], style.fill);
-      gradient.addColorStop(OVERVIEW_MARKERS_COLOR_STOPS[3], style.stroke);
-      ctx.fillStyle = gradient;
+      let color = getColor(style.colorName, this.theme);
+      ctx.fillStyle = color;
       ctx.beginPath();
 
       for (let { start, end } of batch) {
         let left = start * dataScale;
         let width = Math.max((end - start) * dataScale, OVERVIEW_MARKER_WIDTH_MIN);
         ctx.rect(left, top, width, height);
       }
 
@@ -221,17 +217,17 @@ MarkersOverview.prototype = Heritage.extend(AbstractCanvasGraph.prototype, {
   },
 
   /**
    * Sets the theme via `theme` to either "light" or "dark",
    * and updates the internal styling to match. Requires a redraw
    * to see the effects.
    */
   setTheme: function (theme) {
-    theme = theme || "light";
+    this.theme = theme = theme || "light";
     this.backgroundColor = getColor("body-background", theme);
     this.selectionBackgroundColor = setAlpha(getColor("selection-background", theme), 0.25);
     this.selectionStripesColor = setAlpha("#fff", 0.1);
     this.headerBackgroundColor = getColor("body-background", theme);
     this.headerTextColor = getColor("body-color", theme);
     this.headerTimelineStrokeColor = setAlpha(getColor("body-color-alt", theme), 0.25);
     this.alternatingBackgroundColor = setAlpha(getColor("body-color", theme), 0.05);
   }
diff --git a/browser/devtools/shared/timeline/waterfall.js b/browser/devtools/shared/timeline/waterfall.js
index a74569a..2335d411 100644
--- a/browser/devtools/shared/timeline/waterfall.js
+++ b/browser/devtools/shared/timeline/waterfall.js
@@ -427,19 +427,17 @@ Waterfall.prototype = {
     let blueprint = this._blueprint[marker.name];
 
     let sidebar = this._document.createElement("hbox");
     sidebar.className = "waterfall-sidebar theme-sidebar";
     sidebar.setAttribute("width", WATERFALL_SIDEBAR_WIDTH);
     sidebar.setAttribute("align", "center");
 
     let bullet = this._document.createElement("hbox");
-    bullet.className = "waterfall-marker-bullet";
-    bullet.style.backgroundColor = blueprint.fill;
-    bullet.style.borderColor = blueprint.stroke;
+    bullet.className = `waterfall-marker-bullet ${blueprint.colorName}`;
     bullet.setAttribute("type", marker.name);
     sidebar.appendChild(bullet);
 
     let name = this._document.createElement("label");
     name.setAttribute("crop", "end");
     name.setAttribute("flex", "1");
     name.className = "plain waterfall-marker-name";
 
@@ -478,22 +476,18 @@ Waterfall.prototype = {
     waterfall.setAttribute("align", "center");
     waterfall.setAttribute("flex", "1");
 
     let start = (marker.start - startTime) * dataScale;
     let width = (marker.end - marker.start) * dataScale;
     let offset = this._isRTL ? this._waterfallWidth : 0;
 
     let bar = this._document.createElement("hbox");
-    bar.className = "waterfall-marker-bar";
-    bar.style.backgroundColor = blueprint.fill;
-    bar.style.borderColor = blueprint.stroke;
+    bar.className = `waterfall-marker-bar ${blueprint.colorName}`;
     bar.style.transform = "translateX(" + (start - offset) + "px)";
-    // Save border color. It will change when marker is selected.
-    bar.setAttribute("borderColor", blueprint.stroke);
     bar.setAttribute("type", marker.name);
     bar.setAttribute("width", Math.max(width, WATERFALL_MARKER_BAR_WIDTH_MIN));
     waterfall.appendChild(bar);
 
     container.appendChild(waterfall);
   },
 
   /**
diff --git a/browser/themes/shared/devtools/performance.inc.css b/browser/themes/shared/devtools/performance.inc.css
index 34313ee..1b87a5d8 100644
--- a/browser/themes/shared/devtools/performance.inc.css
+++ b/browser/themes/shared/devtools/performance.inc.css
@@ -52,20 +52,16 @@
 }
 
 #performance-filter-menupopup > menuitem:before {
   content: "";
   display: block;
   width: 8px;
   height: 8px;
   margin: 0 8px;
-  border: 1px solid;
-  border-radius: 1px;
-  background-color: var(--bullet-bg);
-  border-color: var(--bullet-border);
 }
 
 /* Recording Notice */
 
 #performance-view .notice-container {
   font-size: 120%;
   background-color: var(--theme-toolbar-background);
   color: var(--theme-body-color);
@@ -375,43 +371,34 @@
   -moz-margin-start: -100px !important; /* Don't affect layout. */
 }
 
 .waterfall-marker-bullet {
   width: 8px;
   height: 8px;
   -moz-margin-start: 8px;
   -moz-margin-end: 6px;
-  border: 1px solid;
-  border-radius: 1px;
 }
 
 .waterfall-marker-name {
   font-size: 95%;
   padding-bottom: 1px !important;
 }
 
 .waterfall-marker-bar {
   height: 9px;
-  border: 1px solid;
-  border-radius: 1px;
   transform-origin: left center;
 }
 
 .waterfall-marker-container.selected > .waterfall-sidebar,
 .waterfall-marker-container.selected > .waterfall-marker-item {
   background-color: var(--theme-selection-background);
   color: var(--theme-selection-color);
 }
 
-.waterfall-marker-container.selected .waterfall-marker-bullet,
-.waterfall-marker-container.selected .waterfall-marker-bar {
-  border-color: initial !important;
-}
-
 .waterfall-marker-location {
    color: -moz-nativehyperlinktext;
 }
 
 .waterfall-marker-location:hover,
 .waterfall-marker-location:focus {
    text-decoration: underline;
 }
@@ -421,18 +408,41 @@
   -moz-padding-end: 8px;
   padding-top: 2vh;
   overflow: auto;
 }
 
 .marker-details-bullet {
   width: 8px;
   height: 8px;
-  border: 1px solid;
-  border-radius: 1px;
+}
+
+#performance-filter-menupopup > menuitem.highlight-pink:before,
+.marker-details-bullet.highlight-pink,
+.waterfall-marker-bar.highlight-pink,
+.waterfall-marker-bullet.highlight-pink {
+  background-color: var(--theme-highlight-pink);
+}
+#performance-filter-menupopup > menuitem.highlight-bluegrey:before,
+.marker-details-bullet.highlight-bluegrey,
+.waterfall-marker-bar.highlight-bluegrey,
+.waterfall-marker-bullet.highlight-bluegrey {
+  background-color: var(--theme-highlight-bluegrey);
+}
+#performance-filter-menupopup > menuitem.highlight-green:before,
+.marker-details-bullet.highlight-green,
+.waterfall-marker-bar.highlight-green,
+.waterfall-marker-bullet.highlight-green {
+  background-color: var(--theme-highlight-green);
+}
+#performance-filter-menupopup > menuitem.highlight-lightorange:before,
+.marker-details-bullet.highlight-lightorange,
+.waterfall-marker-bar.highlight-lightorange,
+.waterfall-marker-bullet.highlight-lightorange {
+  background-color: var(--theme-highlight-lightorange);
 }
 
 #waterfall-details > * {
   padding-top: 3px;
 }
 
 .marker-details-labelname {
   -moz-padding-end: 4px;
-- 
2.2.1

