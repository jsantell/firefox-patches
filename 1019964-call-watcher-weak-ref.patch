From 5ea9527a6dd28ded4cd70a9bf4ffda807feaeaf1 Mon Sep 17 00:00:00 2001
From: Jordan Santell <jsantell@gmail.com>
Date: Mon, 9 Jun 2014 14:29:01 -0700
Subject: Bug 1019964 CallWatcherActor no longer holds strong
 references in FunctionCallActor

---
 toolkit/devtools/server/actors/call-watcher.js | 20 ++++++++++++++++----
 1 file changed, 16 insertions(+), 4 deletions(-)

diff --git a/toolkit/devtools/server/actors/call-watcher.js b/toolkit/devtools/server/actors/call-watcher.js
index 3c986d9..6aacbc1 100644
--- a/toolkit/devtools/server/actors/call-watcher.js
+++ b/toolkit/devtools/server/actors/call-watcher.js
@@ -68,25 +68,37 @@ let FunctionCallActor = protocol.ActorClass({
    *        The called function's arguments.
    * @param any result
    *        The value returned by the function call.
    */
   initialize: function(conn, [window, global, caller, type, name, stack, args, result]) {
     protocol.Actor.prototype.initialize.call(this, conn);
 
     this.details = {
-      window: window,
-      caller: caller,
       type: type,
       name: name,
       stack: stack,
-      args: args,
-      result: result
     };
 
+    // Store a weak reference to all objects so we don't
+    // prevent natural GC.
+    let weakRefs = {
+      window: Cu.getWeakReference(window),
+      caller: Cu.getWeakReference(caller),
+      result: Cu.getWeakReference(result),
+      args: Cu.getWeakReference(args)
+    };
+
+    Object.defineProperties(this.details, {
+      window: { get: () => weakRefs.window.get() },
+      caller: { get: () => weakRefs.caller.get() },
+      result: { get: () => weakRefs.result.get() },
+      args: { get: () => weakRefs.args.get() }
+    });
+
     this.meta = {
       global: -1,
       previews: { caller: "", args: "" }
     };
 
     if (global == "WebGLRenderingContext") {
       this.meta.global = CallWatcherFront.CANVAS_WEBGL_CONTEXT;
     } else if (global == "CanvasRenderingContext2D") {
-- 
1.8.4.2

