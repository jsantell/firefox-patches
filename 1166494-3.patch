From: Jordan Santell <jsantell@mozilla.com>
Date: Fri, 22 May 2015 02:37:06 -0700
Subject: Bug 1166494 -  part3: Correctly handle marker definition fields that are described via function rather than array. r=vp

diff --git a/browser/devtools/shared/timeline/marker-utils.js b/browser/devtools/shared/timeline/marker-utils.js
index ffdabfb..5f12993 100644
--- a/browser/devtools/shared/timeline/marker-utils.js
+++ b/browser/devtools/shared/timeline/marker-utils.js
@@ -61,16 +61,26 @@ exports.getMarkerClassName = getMarkerClassName;
  * Returns an array of objects with key/value pairs of what should be rendered
  * in the marker details view.
  *
  * @param {ProfileTimelineMarker} marker
  * @return {Array<object>}
  */
 function getMarkerFields (marker) {
   let blueprint = TIMELINE_BLUEPRINT[marker.name];
+
+  if (typeof blueprint.fields === "function") {
+    let fields = blueprint.fields(marker);
+    // Add a ":" to the label since the localization files contain the ":"
+    // if not present. This should be changed, ugh.
+    return Object.keys(fields || []).map(label => {
+      let normalizedLabel = label.indexOf(":") !== -1 ? label : (label + ":");
+      return { label: normalizedLabel, value: fields[label] };
+    });
+  }
   return (blueprint.fields || []).reduce((fields, field) => {
     // Ensure this marker has this field present
     if (field.property in marker) {
       let label = field.label;
       let value = marker[field.property];
       // If a formatter function defined, use it to get the
       // value we actually want to display.
       if (typeof field.formatter === "function") {
-- 
2.2.1

