From: Jordan Santell <jsantell@mozilla.com>
Date: Wed, 28 Oct 2015 13:14:35 -0700
Subject: Bug 1201907 - Enable memory tool for use and add a trait indicating its availability. r=fitzgen

diff --git a/devtools/client/definitions.js b/devtools/client/definitions.js
index dfe493c..0058a9e 100644
--- a/devtools/client/definitions.js
+++ b/devtools/client/definitions.js
@@ -280,24 +280,19 @@ Tools.memory = {
   ordinal: 8,
   icon: "chrome://devtools/skin/themes/images/tool-styleeditor.svg",
   invertIconForLightTheme: true,
   url: "chrome://devtools/content/memory/memory.xhtml",
   visibilityswitch: "devtools.memory.enabled",
   label: "Memory",
   panelLabel: "Memory Panel",
   tooltip: "Memory (keyboardshortcut)",
-  hiddenInOptions: true,
 
   isTargetSupported: function (target) {
-    // TODO 1201907
-    // Once Fx44 lands, we should add a root trait `heapSnapshots`
-    // to indicate that the memory actor can handle this.
-    // Shouldn't make this change until Fx44, however.
-    return true; // target.getTrait("heapSnapshots");
+    return target.getTrait("heapSnapshots");
   },
 
   build: function (frame, target) {
     return new MemoryPanel(frame, target);
   }
 };
 
 Tools.netMonitor = {
diff --git a/devtools/server/actors/root.js b/devtools/server/actors/root.js
index 501a852..eb8d646 100644
--- a/devtools/server/actors/root.js
+++ b/devtools/server/actors/root.js
@@ -168,16 +168,19 @@ RootActor.prototype = {
     // no longer expose tab actors, but also that getProcess forbids
     // exposing actors for security reasons
     get allowChromeProcess() {
       return DebuggerServer.allowChromeProcess;
     },
     // Whether or not `getProfile()` supports specifying a `startTime`
     // and `endTime` to filter out samples. Fx40+
     profilerDataFilterable: true,
+    // Whether or not the MemoryActor's heap snapshot abilities are
+    // fully equipped to handle heap snapshots for the memory tool. Fx44+
+    heapSnapshots: true,
   },
 
   /**
    * Return a 'hello' packet as specified by the Remote Debugging Protocol.
    */
   sayHello: function() {
     return {
       from: this.actorID,
-- 
2.3.1

