From 1f3aef13329ebcc6bb9d0d43a537d0f61c42fa91 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Henrik=20Tj=C3=A4der?= <henrik@tjaders.com>
Date: Thu, 8 Oct 2015 02:34:20 +0200
Subject: [PATCH] Bug 1161698 - Imported profiles should use their filename as
 the display label. r=jsantell

---
 devtools/client/performance/modules/io.js            |  4 ++++
 .../test/browser_perf-recordings-io-01.js            | 20 ++++++++++----------
 .../test/browser_perf-recordings-io-04.js            |  1 -
 3 files changed, 14 insertions(+), 11 deletions(-)

diff --git a/devtools/client/performance/modules/io.js b/devtools/client/performance/modules/io.js
index 9db721a..ca07c96 100644
--- a/devtools/client/performance/modules/io.js
+++ b/devtools/client/performance/modules/io.js
@@ -99,16 +99,20 @@ function loadRecordingFromFile (file) {
       return;
     }
     if (recordingData.version === PERF_TOOL_SERIALIZER_LEGACY_VERSION) {
       recordingData = convertLegacyData(recordingData);
     }
     if (recordingData.profile.meta.version === 2) {
       RecordingUtils.deflateProfile(recordingData.profile);
     }
+    if (!recordingData.label) {
+      // set the label to the filename without its extension
+      recordingData.label = file.leafName.replace(/\..+$/, "");
+    }
     deferred.resolve(recordingData);
   });
 
   return deferred.promise;
 }
 
 /**
  * Returns a boolean indicating whether or not the passed in `version`
diff --git a/devtools/client/performance/test/browser_perf-recordings-io-01.js b/devtools/client/performance/test/browser_perf-recordings-io-01.js
index fac847f..075e648 100644
--- a/devtools/client/performance/test/browser_perf-recordings-io-01.js
+++ b/devtools/client/performance/test/browser_perf-recordings-io-01.js
@@ -63,30 +63,30 @@ var test = Task.async(function*() {
 
   yield rerendered;
   ok(true, "The imported data was re-rendered.");
 
   // Verify imported recording.
 
   let importedData = PerformanceController.getCurrentRecording().getAllData();
 
-  is(importedData.label, originalData.label,
-    "The imported data is identical to the original data (1).");
+  ok(/^tmpprofile/.test(importedData.label),
+    "The imported data label is identical to the filename without its extension.");
   is(importedData.duration, originalData.duration,
-    "The imported data is identical to the original data (2).");
+    "The imported data is identical to the original data (1).");
   is(importedData.markers.toSource(), originalData.markers.toSource(),
-    "The imported data is identical to the original data (3).");
+    "The imported data is identical to the original data (2).");
   is(importedData.memory.toSource(), originalData.memory.toSource(),
-    "The imported data is identical to the original data (4).");
+    "The imported data is identical to the original data (3).");
   is(importedData.ticks.toSource(), originalData.ticks.toSource(),
-    "The imported data is identical to the original data (5).");
+    "The imported data is identical to the original data (4).");
   is(importedData.allocations.toSource(), originalData.allocations.toSource(),
-    "The imported data is identical to the original data (6).");
+    "The imported data is identical to the original data (5).");
   is(importedData.profile.toSource(), originalData.profile.toSource(),
-    "The imported data is identical to the original data (7).");
+    "The imported data is identical to the original data (6).");
   is(importedData.configuration.withTicks, originalData.configuration.withTicks,
-    "The imported data is identical to the original data (8).");
+    "The imported data is identical to the original data (7).");
   is(importedData.configuration.withMemory, originalData.configuration.withMemory,
-    "The imported data is identical to the original data (9).");
+    "The imported data is identical to the original data (8).");
 
   yield teardown(panel);
   finish();
 });
diff --git a/devtools/client/performance/test/browser_perf-recordings-io-04.js b/devtools/client/performance/test/browser_perf-recordings-io-04.js
index 8f92346..1d8a24d 100644
--- a/devtools/client/performance/test/browser_perf-recordings-io-04.js
+++ b/devtools/client/performance/test/browser_perf-recordings-io-04.js
@@ -116,17 +116,16 @@ var test = Task.async(function*() {
   is($("#select-memory-calltree-view").hidden, true, "memorycalltree button hidden");
   is($("#select-memory-flamegraph-view").hidden, true, "memoryflamegraph button hidden");
   ok(DetailsView.isViewSelected(JsCallTreeView), "jscalltree view selected as its the only option");
 
   // Verify imported recording.
 
   let importedData = PerformanceController.getCurrentRecording().getAllData();
   let expected = Object.create({
-    label: "",
     duration: 10000,
     markers: [].toSource(),
     frames: [].toSource(),
     memory: [].toSource(),
     ticks: TICKS_DATA.toSource(),
     profile: RecordingUtils.deflateProfile(JSON.parse(JSON.stringify(PROFILER_DATA))).toSource(),
     allocations: ({sites:[], timestamps:[], frames:[], sizes: []}).toSource(),
     withTicks: true,
-- 
2.3.1

