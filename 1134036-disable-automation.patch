From: Jordan Santell <jsantell@gmail.com>
Date: Tue, 17 Feb 2015 16:05:08 -0800
Subject: Bug 1134036 - Disable web audio editor's automation panel
 until bug 1125600 is fixed. r=vp

diff --git a/browser/devtools/webaudioeditor/test/browser.ini b/browser/devtools/webaudioeditor/test/browser.ini
index 69afc93..d5c80a6 100644
--- a/browser/devtools/webaudioeditor/test/browser.ini
+++ b/browser/devtools/webaudioeditor/test/browser.ini
@@ -21,28 +21,28 @@ support-files =
 [browser_audionode-actor-get-params-02.js]
 [browser_audionode-actor-get-set-param.js]
 [browser_audionode-actor-get-type.js]
 [browser_audionode-actor-is-source.js]
 [browser_audionode-actor-bypass.js]
 [browser_audionode-actor-connectnode-disconnect.js]
 [browser_audionode-actor-connectparam.js]
 skip-if = true # bug 1092571
-[browser_audionode-actor-add-automation-event.js]
-[browser_audionode-actor-get-automation-data-01.js]
-[browser_audionode-actor-get-automation-data-02.js]
-[browser_audionode-actor-get-automation-data-03.js]
+# [browser_audionode-actor-add-automation-event.js] bug 1134036
+# [browser_audionode-actor-get-automation-data-01.js] bug 1134036
+# [browser_audionode-actor-get-automation-data-02.js] bug 1134036
+# [browser_audionode-actor-get-automation-data-03.js] bug 1134036
 [browser_callwatcher-01.js]
 [browser_webaudio-actor-simple.js]
 [browser_webaudio-actor-destroy-node.js]
 [browser_webaudio-actor-connect-param.js]
-[browser_webaudio-actor-automation-event.js]
+# [browser_webaudio-actor-automation-event.js] bug 1134036
 
-[browser_wa_automation-view-01.js]
-[browser_wa_automation-view-02.js]
+# [browser_wa_automation-view-01.js] bug 1134036
+# [browser_wa_automation-view-02.js] bug 1134036
 [browser_wa_controller-01.js]
 [browser_wa_destroy-node-01.js]
 [browser_wa_first-run.js]
 [browser_wa_graph-click.js]
 [browser_wa_graph-markers.js]
 [browser_wa_graph-render-01.js]
 [browser_wa_graph-render-02.js]
 [browser_wa_graph-render-03.js]
diff --git a/browser/devtools/webaudioeditor/webaudioeditor.xul b/browser/devtools/webaudioeditor/webaudioeditor.xul
index b8a8b42..e0af48b 100644
--- a/browser/devtools/webaudioeditor/webaudioeditor.xul
+++ b/browser/devtools/webaudioeditor/webaudioeditor.xul
@@ -91,18 +91,20 @@
                   <toolbarbutton class="bypass devtools-toolbarbutton"
                                  data-command="bypass"
                                  tabindex="0"/>
                 </hbox>
               </toolbar>
               <tabs>
                 <tab id="properties-tab"
                      label="&webAudioEditorUI.tab.properties2;"/>
+                <!-- bug 1134036
                 <tab id="automation-tab"
                      label="&webAudioEditorUI.tab.automation;"/>
+                -->
               </tabs>
               <tabpanels flex="1">
                 <!-- Properties Panel -->
                 <tabpanel id="properties-tabpanel"
                           class="tabpanel-content">
                   <vbox id="properties-content" flex="1" hidden="true">
                   </vbox>
                   <vbox id="properties-empty" flex="1" hidden="true">
diff --git a/toolkit/devtools/server/actors/webaudio.js b/toolkit/devtools/server/actors/webaudio.js
index c3eb646..88ebe58 100644
--- a/toolkit/devtools/server/actors/webaudio.js
+++ b/toolkit/devtools/server/actors/webaudio.js
@@ -9,20 +9,20 @@ const Services = require("Services");
 
 const { Promise: promise } = Cu.import("resource://gre/modules/Promise.jsm", {});
 const events = require("sdk/event/core");
 const { on: systemOn, off: systemOff } = require("sdk/system/events");
 const protocol = require("devtools/server/protocol");
 const { CallWatcherActor, CallWatcherFront } = require("devtools/server/actors/call-watcher");
 const { ThreadActor } = require("devtools/server/actors/script");
 const AutomationTimeline = require("./utils/automation-timeline");
-
 const { on, once, off, emit } = events;
 const { types, method, Arg, Option, RetVal } = protocol;
 
+const ENABLE_AUTOMATION = false;
 const AUTOMATION_GRANULARITY = 2000;
 const AUTOMATION_GRANULARITY_MAX = 6000;
 
 const AUDIO_GLOBALS = [
   "AudioContext", "AudioNode", "AudioParam"
 ];
 
 const NODE_CREATION_METHODS = [
@@ -675,17 +675,17 @@ let WebAudioActor = exports.WebAudioActor = protocol.ActorClass({
     // All Web Audio nodes inherit from AudioNode's prototype, so
     // hook into the `connect` and `disconnect` methods
     if (WebAudioFront.NODE_ROUTING_METHODS.has(name)) {
       this._handleRoutingCall(functionCall);
     }
     else if (WebAudioFront.NODE_CREATION_METHODS.has(name)) {
       this._handleCreationCall(functionCall);
     }
-    else if (WebAudioFront.AUTOMATION_METHODS.has(name)) {
+    else if (ENABLE_AUTOMATION && WebAudioFront.AUTOMATION_METHODS.has(name)) {
       this._handleAutomationCall(functionCall);
     }
   },
 
   _handleRoutingCall: function(functionCall) {
     let { caller, args, name } = functionCall.details;
     let source = caller;
     let dest = args[0];
-- 
2.2.1

