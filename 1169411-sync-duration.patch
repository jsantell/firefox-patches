From: Jordan Santell <jsantell@mozilla.com>
Date: Thu, 28 May 2015 13:59:12 -0700
Subject: Bug 1169411 - recording durations should be based off of profiler's end time in a performance recording. r=vp

diff --git a/browser/devtools/performance/modules/logic/recording-model.js b/browser/devtools/performance/modules/logic/recording-model.js
index 67e2a71..4c15dbb 100644
--- a/browser/devtools/performance/modules/logic/recording-model.js
+++ b/browser/devtools/performance/modules/logic/recording-model.js
@@ -128,18 +128,21 @@ RecordingModel.prototype = {
     this._duration = endTime - this._localStartTime;
     this._recording = false;
   },
 
   /**
    * Sets results available from stopping a recording from SharedPerformanceConnection.
    * Should only be called by SharedPerformanceConnection.
    */
-  _onStopRecording: Task.async(function *(info) {
-    this._profile = info.profile;
+  _onStopRecording: Task.async(function *({ profilerEndTime, profile }) {
+    // Update the duration with the accurate profilerEndTime, so we don't have
+    // samples outside of the approximate duration set in `_onStoppingRecording`.
+    this._duration = profilerEndTime - this._profilerStartTime;
+    this._profile = profile;
     this._completed = true;
 
     // We filter out all samples that fall out of current profile's range
     // since the profiler is continuously running. Because of this, sample
     // times are not guaranteed to have a zero epoch, so offset the
     // timestamps.
     // TODO move this into FakeProfilerFront in ./actors.js after bug 1154115
     RecordingUtils.offsetSampleTimes(this._profile, this._profilerStartTime);
-- 
2.2.1

