From 8fd157e1fabea00a82d12b891316e02bee7bb8f0 Mon Sep 17 00:00:00 2001
From: Jordan Santell <jsantell@gmail.com>
Date: Thu, 3 Apr 2014 13:45:00 -0700
Subject: Bug 991762 - Hide picker tool when debugging addons

---
 browser/devtools/debugger/test/browser_dbg_addon-panels.js | 5 +++++
 browser/devtools/framework/toolbox.js                      | 4 +++-
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/browser/devtools/debugger/test/browser_dbg_addon-panels.js b/browser/devtools/debugger/test/browser_dbg_addon-panels.js
index c44f333..be116ca 100644
--- a/browser/devtools/debugger/test/browser_dbg_addon-panels.js
+++ b/browser/devtools/debugger/test/browser_dbg_addon-panels.js
@@ -20,25 +20,30 @@ function test() {
 
     // Store and enable all optional dev tools panels
     let originalPrefs = PREFS.map(pref => {
       let original = Services.prefs.getBoolPref(pref);
       Services.prefs.setBoolPref(pref, true)
       return original;
     });
 
+    // Check only valid tabs are shown
     let tabs = addonDebugger.frame.contentDocument.getElementById("toolbox-tabs").children;
     let expectedTabs = ["options", "jsdebugger"];
 
     is(tabs.length, 2, "displaying only 2 tabs in addon debugger");
     Array.forEach(tabs, (tab, i) => {
       let toolName = expectedTabs[i];
       is(tab.getAttribute("toolid"), toolName, "displaying " + toolName);
     });
 
+    // Check no toolbox buttons are shown
+    let buttons = addonDebugger.frame.contentDocument.getElementById("toolbox-buttons").children;
+    is(buttons.length, 0, "no toolbox buttons for the addon debugger");
+
     yield addonDebugger.destroy();
     yield removeAddon(addon);
 
     PREFS.forEach((pref, i) => Services.prefs.setBoolPref(pref, originalPrefs[i]));
 
     finish();
   });
 }
diff --git a/browser/devtools/framework/toolbox.js b/browser/devtools/framework/toolbox.js
index 541f559..d07238f 100644
--- a/browser/devtools/framework/toolbox.js
+++ b/browser/devtools/framework/toolbox.js
@@ -522,17 +522,19 @@ Toolbox.prototype = {
       this._buildTabForTool(definition);
     }
   },
 
   /**
    * Add buttons to the UI as specified in the devtools.toolbox.toolbarSpec pref
    */
   _buildButtons: function() {
-    this._buildPickerButton();
+    if (!this.target.isAddon) {
+      this._buildPickerButton();
+    }
 
     if (!this.target.isLocalTab) {
       return;
     }
 
     let spec = CommandUtils.getCommandbarSpec("devtools.toolbox.toolbarSpec");
     let environment = CommandUtils.createEnvironment(this, '_target');
     this._requisition = CommandUtils.createRequisition(environment);
-- 
1.8.4.2

