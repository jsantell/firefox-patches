From: Jordan Santell <jsantell@mozilla.com>
Date: Tue, 20 Oct 2015 17:12:51 -0700
Subject: Bug 1216657 - Alias 'react' to select between production and dev versions based off of build variables. r=jryans,janx

diff --git a/devtools/client/aboutdebugging/components/addons.js b/devtools/client/aboutdebugging/components/addons.js
index b31e3e4..0fe2df3 100644
--- a/devtools/client/aboutdebugging/components/addons.js
+++ b/devtools/client/aboutdebugging/components/addons.js
@@ -1,18 +1,17 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* global AddonManager, React, TargetListComponent */
 
 "use strict";
 
-loader.lazyRequireGetter(this, "React",
-  "resource:///modules/devtools/client/shared/vendor/react.js");
+loader.lazyRequireGetter(this, "React", "react");
 loader.lazyRequireGetter(this, "TargetListComponent",
   "devtools/client/aboutdebugging/components/target-list", true);
 loader.lazyRequireGetter(this, "Services");
 
 loader.lazyImporter(this, "AddonManager",
   "resource://gre/modules/AddonManager.jsm");
 
 const ExtensionIcon = "chrome://mozapps/skin/extensions/extensionGeneric.png";
diff --git a/devtools/client/aboutdebugging/components/target-list.js b/devtools/client/aboutdebugging/components/target-list.js
index 21c6f45..07bbe2b 100644
--- a/devtools/client/aboutdebugging/components/target-list.js
+++ b/devtools/client/aboutdebugging/components/target-list.js
@@ -1,18 +1,17 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* global React, TargetComponent */
 
 "use strict";
 
-loader.lazyRequireGetter(this, "React",
-  "resource:///modules/devtools/client/shared/vendor/react.js");
+loader.lazyRequireGetter(this, "React", "react");
 loader.lazyRequireGetter(this, "TargetComponent",
   "devtools/client/aboutdebugging/components/target", true);
 loader.lazyRequireGetter(this, "Services");
 
 const Strings = Services.strings.createBundle(
   "chrome://browser/locale/devtools/aboutdebugging.properties");
 const LocaleCompare = (a, b) => {
   return a.name.toLowerCase().localeCompare(b.name.toLowerCase());
diff --git a/devtools/client/aboutdebugging/components/target.js b/devtools/client/aboutdebugging/components/target.js
index 59edf85..d4d2087 100644
--- a/devtools/client/aboutdebugging/components/target.js
+++ b/devtools/client/aboutdebugging/components/target.js
@@ -2,18 +2,17 @@
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* global alert, BrowserToolboxProcess, gDevTools, React, TargetFactory,
    Toolbox */
 
 "use strict";
 
-loader.lazyRequireGetter(this, "React",
-  "resource:///modules/devtools/client/shared/vendor/react.js");
+loader.lazyRequireGetter(this, "React", "react");
 loader.lazyRequireGetter(this, "TargetFactory",
   "devtools/client/framework/target", true);
 loader.lazyRequireGetter(this, "Toolbox",
   "devtools/client/framework/toolbox", true);
 loader.lazyRequireGetter(this, "Services");
 
 loader.lazyImporter(this, "BrowserToolboxProcess",
   "resource:///modules/devtools/client/framework/ToolboxProcess.jsm");
diff --git a/devtools/client/aboutdebugging/components/workers.js b/devtools/client/aboutdebugging/components/workers.js
index 74e0325..702003c 100644
--- a/devtools/client/aboutdebugging/components/workers.js
+++ b/devtools/client/aboutdebugging/components/workers.js
@@ -3,18 +3,17 @@
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* global React, TargetListComponent */
 
 "use strict";
 
 loader.lazyRequireGetter(this, "Ci",
   "chrome", true);
-loader.lazyRequireGetter(this, "React",
-  "resource:///modules/devtools/client/shared/vendor/react.js");
+loader.lazyRequireGetter(this, "React", "react");
 loader.lazyRequireGetter(this, "TargetListComponent",
   "devtools/client/aboutdebugging/components/target-list", true);
 loader.lazyRequireGetter(this, "Services");
 
 const Strings = Services.strings.createBundle(
   "chrome://browser/locale/devtools/aboutdebugging.properties");
 
 exports.WorkersComponent = React.createClass({
diff --git a/devtools/client/memory/app.js b/devtools/client/memory/app.js
index ab6f43d..c5b7b6f 100644
--- a/devtools/client/memory/app.js
+++ b/devtools/client/memory/app.js
@@ -1,9 +1,9 @@
-const { DOM: dom, createClass, createFactory, PropTypes } = require("devtools/client/shared/vendor/react");
+const { DOM: dom, createClass, createFactory, PropTypes } = require("react");
 const { connect } = require("devtools/client/shared/vendor/react-redux");
 const { selectSnapshotAndRefresh, takeSnapshotAndCensus } = require("./actions/snapshot");
 const { setBreakdownAndRefresh } = require("./actions/breakdown");
 const { breakdownNameToSpec, getBreakdownDisplayData } = require("./utils");
 const Toolbar = createFactory(require("./components/toolbar"));
 const List = createFactory(require("./components/list"));
 const SnapshotListItem = createFactory(require("./components/snapshot-list-item"));
 const HeapView = createFactory(require("./components/heap"));
diff --git a/devtools/client/memory/components/heap.js b/devtools/client/memory/components/heap.js
index d1ae90f..775369c 100644
--- a/devtools/client/memory/components/heap.js
+++ b/devtools/client/memory/components/heap.js
@@ -1,9 +1,9 @@
-const { DOM: dom, createClass, PropTypes } = require("devtools/client/shared/vendor/react");
+const { DOM: dom, createClass, PropTypes } = require("react");
 const { getSnapshotStatusText } = require("../utils");
 const { snapshotState: states } = require("../constants");
 const { snapshot: snapshotModel } = require("../models");
 const TAKE_SNAPSHOT_TEXT = "Take snapshot";
 
 /**
  * Main view for the memory tool -- contains several panels for different states;
  * an initial state of only a button to take a snapshot, loading states, and the
diff --git a/devtools/client/memory/components/list.js b/devtools/client/memory/components/list.js
index 4181833..20aa8b9 100644
--- a/devtools/client/memory/components/list.js
+++ b/devtools/client/memory/components/list.js
@@ -1,9 +1,9 @@
-const { DOM: dom, createClass, PropTypes } = require("devtools/client/shared/vendor/react");
+const { DOM: dom, createClass, PropTypes } = require("react");
 
 /**
  * Generic list component that takes another react component to represent
  * the children nodes as `itemComponent`, and a list of items to render
  * as that component with a click handler.
  */
 const List = module.exports = createClass({
   displayName: "list",
diff --git a/devtools/client/memory/components/snapshot-list-item.js b/devtools/client/memory/components/snapshot-list-item.js
index f06539d..a1234f0 100644
--- a/devtools/client/memory/components/snapshot-list-item.js
+++ b/devtools/client/memory/components/snapshot-list-item.js
@@ -1,9 +1,9 @@
-const { DOM: dom, createClass, PropTypes } = require("devtools/client/shared/vendor/react");
+const { DOM: dom, createClass, PropTypes } = require("react");
 const { getSnapshotStatusText } = require("../utils");
 const { snapshot: snapshotModel } = require("../models");
 
 const SnapshotListItem = module.exports = createClass({
   displayName: "snapshot-list-item",
 
   propTypes: {
     onClick: PropTypes.func,
diff --git a/devtools/client/memory/components/toolbar.js b/devtools/client/memory/components/toolbar.js
index 60b0493..6dde7f9 100644
--- a/devtools/client/memory/components/toolbar.js
+++ b/devtools/client/memory/components/toolbar.js
@@ -1,9 +1,9 @@
-const { DOM, createClass, PropTypes } = require("devtools/client/shared/vendor/react");
+const { DOM, createClass, PropTypes } = require("react");
 
 const Toolbar = module.exports = createClass({
   displayName: "toolbar",
   propTypes: {
     breakdowns: PropTypes.arrayOf(PropTypes.shape({
       name: PropTypes.string.isRequired,
       displayName: PropTypes.string.isRequired,
     })).isRequired,
diff --git a/devtools/client/memory/initializer.js b/devtools/client/memory/initializer.js
index 21f02a9..b063031 100644
--- a/devtools/client/memory/initializer.js
+++ b/devtools/client/memory/initializer.js
@@ -3,17 +3,17 @@
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
 "use strict";
 
 const { classes: Cc, interfaces: Ci, utils: Cu, results: Cr } = Components;
 const BrowserLoaderModule = {};
 Cu.import("resource:///modules/devtools/client/shared/browser-loader.js", BrowserLoaderModule);
 const { require } = BrowserLoaderModule.BrowserLoader("resource:///modules/devtools/client/memory/", this);
 const { Task } = require("resource://gre/modules/Task.jsm");
-const { createFactory, createElement, render } = require("devtools/client/shared/vendor/react");
+const { createFactory, createElement, render } = require("react");
 const { Provider } = require("devtools/client/shared/vendor/react-redux");
 const App = createFactory(require("devtools/client/memory/app"));
 const Store = require("devtools/client/memory/store");
 
 /**
  * The current target, toolbox, MemoryFront, and HeapAnalysesClient, set by this tool's host.
  */
 var gToolbox, gTarget, gFront, gHeapAnalysesClient;
diff --git a/devtools/client/memory/models.js b/devtools/client/memory/models.js
index f7faeb5..10039e2 100644
--- a/devtools/client/memory/models.js
+++ b/devtools/client/memory/models.js
@@ -1,11 +1,11 @@
 const { MemoryFront } = require("devtools/server/actors/memory");
 const HeapAnalysesClient = require("devtools/shared/heapsnapshot/HeapAnalysesClient");
-const { PropTypes } = require("devtools/client/shared/vendor/react");
+const { PropTypes } = require("react");
 const { snapshotState: states } = require("./constants");
 
 /**
  * The breakdown object DSL describing how we want
  * the census data to be.
  * @see `js/src/doc/Debugger/Debugger.Memory.md`
  */
 let breakdownModel = exports.breakdown = PropTypes.shape({
diff --git a/devtools/client/shared/browser-loader.js b/devtools/client/shared/browser-loader.js
index ef0f2fd..8380cbe 100644
--- a/devtools/client/shared/browser-loader.js
+++ b/devtools/client/shared/browser-loader.js
@@ -1,33 +1,13 @@
 var { classes: Cc, interfaces: Ci, utils: Cu } = Components;
 
 const loaders = Cu.import("resource://gre/modules/commonjs/toolkit/loader.js", {});
 const devtools = Cu.import("resource://gre/modules/devtools/shared/Loader.jsm", {}).devtools;
 const { joinURI } = devtools.require("devtools/shared/path");
-var appConstants;
-
-// Some of the services that the system module requires is not
-// available in xpcshell tests. This is ok, we can easily polyfill the
-// values that we need.
-try {
-  const system = devtools.require("devtools/shared/system");
-  appConstants = system.constants;
-}
-catch(e) {
-  // We are in a testing environment most likely. There isn't much
-  // risk to this defaulting to true because the dev version of React
-  // will be loaded if this is true, and that file doesn't get built
-  // into the release version of Firefox, so this will only work with
-  // dev environments.
-  appConstants = {
-    DEBUG_JS_MODULES: true
-  };
-}
-
 const VENDOR_CONTENT_URL = "resource:///modules/devtools/client/shared/vendor";
 
 /*
  * Create a loader to be used in a browser environment. This evaluates
  * modules in their own environment, but sets window (the normal
  * global object) as the sandbox prototype, so when a variable is not
  * defined it checks `window` before throwing an error. This makes all
  * browser APIs available to modules by default, like a normal browser
@@ -46,30 +26,23 @@ const VENDOR_CONTENT_URL = "resource:///modules/devtools/client/shared/vendor";
  * @param Object window
  *        The window instance to evaluate modules within
  * @return Object
  *         An object with two properties:
  *         - loader: the Loader instance
  *         - require: a function to require modules with
  */
 function BrowserLoader(baseURI, window) {
-  const loaderOptions = devtools.require('@loader/options');
-
-  let dynamicPaths = {};
-  if (appConstants.DEBUG_JS_MODULES) {
-    // Load in the dev version of React
-    dynamicPaths["devtools/shared/vendor/react"] =
-      "resource:///modules/devtools/vendor/react-dev.js";
-  }
+  const loaderOptions = devtools.require("@loader/options");
 
   const opts = {
     id: "browser-loader",
     sharedGlobal: true,
     sandboxPrototype: window,
-    paths: Object.assign({}, loaderOptions.paths, dynamicPaths),
+    paths: loaderOptions.paths,
     invisibleToDebugger: loaderOptions.invisibleToDebugger,
     require: (id, require) => {
       const uri = require.resolve(id);
 
       if (!uri.startsWith(baseURI) &&
           !uri.startsWith(VENDOR_CONTENT_URL)) {
         return devtools.require(uri);
       }
diff --git a/devtools/client/shared/vendor/REACT_REDUX_UPGRADING b/devtools/client/shared/vendor/REACT_REDUX_UPGRADING
index 7739751..9935e03 100644
--- a/devtools/client/shared/vendor/REACT_REDUX_UPGRADING
+++ b/devtools/client/shared/vendor/REACT_REDUX_UPGRADING
@@ -1,9 +1,9 @@
 "react-redux" uses UMD style loading to work in many different environments.
 It assumes that "react" and "redux" are both included via `require("react")`
 as in node or browserify, but the paths to our react and redux installation are different.
 
 If upgrading react-redux, define the correct paths and replace the require statements
 for the module.exports case with the correct paths.
 
-Path to react: "devtools/client/shared/vendor/react"
+Path to react: "react"
 Path to redux: "devtools/client/shared/vendor/redux"
diff --git a/devtools/client/shared/vendor/react-redux.js b/devtools/client/shared/vendor/react-redux.js
index 562f491..be3224cc 100644
--- a/devtools/client/shared/vendor/react-redux.js
+++ b/devtools/client/shared/vendor/react-redux.js
@@ -1,9 +1,9 @@
-var REACT_PATH = "devtools/client/shared/vendor/react";
+var REACT_PATH = "react";
 var REDUX_PATH = "devtools/client/shared/vendor/redux";
 
 (function webpackUniversalModuleDefinition(root, factory) {
 	if(typeof exports === 'object' && typeof module === 'object')
 		module.exports = factory(require(REACT_PATH), require(REDUX_PATH));
 	else if(typeof define === 'function' && define.amd)
 		define(["react", "redux"], factory);
 	else if(typeof exports === 'object')
diff --git a/devtools/shared/Loader.jsm b/devtools/shared/Loader.jsm
index ebc4ef5..bd6070e 100644
--- a/devtools/shared/Loader.jsm
+++ b/devtools/shared/Loader.jsm
@@ -12,16 +12,17 @@
 var { Constructor: CC, classes: Cc, interfaces: Ci, utils: Cu } = Components;
 
 Cu.import("resource://gre/modules/XPCOMUtils.jsm");
 Cu.import("resource://gre/modules/Services.jsm");
 
 XPCOMUtils.defineLazyModuleGetter(this, "NetUtil", "resource://gre/modules/NetUtil.jsm");
 XPCOMUtils.defineLazyModuleGetter(this, "FileUtils", "resource://gre/modules/FileUtils.jsm");
 XPCOMUtils.defineLazyModuleGetter(this, "OS", "resource://gre/modules/osfile.jsm");
+XPCOMUtils.defineLazyModuleGetter(this, "AppConstants", "resource://gre/modules/AppConstants.jsm");
 
 var { Loader } = Cu.import("resource://gre/modules/commonjs/toolkit/loader.js", {});
 var promise = Cu.import("resource://gre/modules/Promise.jsm", {}).Promise;
 
 this.EXPORTED_SYMBOLS = ["DevToolsLoader", "devtools", "BuiltinProvider",
                          "SrcdirProvider", "require", "loader"];
 
 /**
@@ -95,17 +96,21 @@ BuiltinProvider.prototype = {
         // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "acorn": "resource://gre/modules/devtools/acorn",
         // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "acorn/util/walk": "resource://gre/modules/devtools/acorn/walk.js",
         // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "source-map": "resource://gre/modules/devtools/sourcemap/source-map.js",
         // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         // Allow access to xpcshell test items from the loader.
-        "xpcshell-test": "resource://test"
+        "xpcshell-test": "resource://test",
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
+        "react": AppConstants.DEBUG_JS_MODULES ?
+                 "resource:///modules/devtools/client/shared/vendor/react-dev.js" :
+                 "resource:///modules/devtools/client/shared/vendor/react.js",
         // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
       },
       globals: this.globals,
       invisibleToDebugger: this.invisibleToDebugger,
       sharedGlobal: true,
       sharedGlobalBlacklist: sharedGlobalBlacklist
     });
 
@@ -141,16 +146,18 @@ SrcdirProvider.prototype = {
     let gcliURI = this.fileURI(OS.Path.join(sharedDir,
                                             "gcli", "source", "lib", "gcli"));
     let promiseURI = this.fileURI(OS.Path.join(modulesDir,
                                                "Promise-backend.js"));
     let acornURI = this.fileURI(OS.Path.join(sharedDir, "acorn"));
     let acornWalkURI = OS.Path.join(acornURI, "walk.js");
     let sourceMapURI = this.fileURI(OS.Path.join(sharedDir,
                                                  "sourcemap", "source-map.js"));
+    let reactURI = this.fileURI(OS.path.join(devtoolsDir, "shared", "vendor",
+                   AppConstants.DEBUG_JS_MODULES ? "react-dev.js" : "react"));
     this.loader = new Loader.Loader({
       id: "fx-devtools",
       modules: loaderModules,
       paths: {
         // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "": "resource://gre/modules/commonjs/",
         // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "devtools": devtoolsURI,
@@ -160,16 +167,18 @@ SrcdirProvider.prototype = {
         "promise": promiseURI,
         // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "acorn": acornURI,
         // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "acorn/util/walk": acornWalkURI,
         // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
         "source-map": sourceMapURI,
         // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
+        "react": reactURI,
+        // ⚠ DISCUSSION ON DEV-DEVELOPER-TOOLS REQUIRED BEFORE MODIFYING ⚠
       },
       globals: this.globals,
       invisibleToDebugger: this.invisibleToDebugger,
       sharedGlobal: true,
       sharedGlobalBlacklist: sharedGlobalBlacklist
     });
 
     return this._writeManifest(srcDir).then(null, Cu.reportError);
-- 
2.3.1

